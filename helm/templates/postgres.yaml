{{- if and (hasKey .Values "postgres") (hasKey .Values.postgres "enabled") .Values.postgres.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
  - port: {{ .Values.postgres.service.port }}
    targetPort: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgres.credentials.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgres.credentials.password }}
        - name: POSTGRES_DB
          value: {{ .Values.postgres.credentials.database }}
        ports:
        - containerPort: 5432
        resources:
          {{- toYaml .Values.postgres.resources | nindent 12 }}
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistence.postgres.size }} 
{{- end }}