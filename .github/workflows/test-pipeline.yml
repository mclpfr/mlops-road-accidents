name: Test of the ML Pipeline for Road Accidents

on:
  push:  
    branches:
      - main
  pull_request:  
    branches:
      - main
  workflow_dispatch:  

jobs:
  test-pipeline:
    name: Test Pipeline
    runs-on: ubuntu-latest

    steps:
      # Step 1: Clone the repository
      - name: Clone the repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests beautifulsoup4 pyyaml scikit-learn joblib pytest fastapi uvicorn python-multipart mlflow

      # Step 4: Run the extract data script
      - name: Run extract_data.py
        run: |
          python src/extract_data/extract_data.py

      # Step 5: Run the data preparation script
      - name: Run prepare_data.py
        run: |
          python src/prepare_data/prepare_data.py

      # Step 6: Run the model training script
      - name: Run train_model.py
        run: |
          python src/train_model/train_model.py

      # Step 7: Run the tests
      - name: Run tests.py
        working-directory: ./tests
        run: |
          pytest

      # Step 8: Build and push Docker images for all microservices
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push extract_data image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/extract_data_service:${{ github.run_number }} -t ${{ secrets.DOCKER_USERNAME }}/extract_data_service:latest -f src/extract_data/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/extract_data_service:${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/extract_data_service:latest

      - name: Build and push prepare_data image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/prepare_data_service:${{ github.run_number }} -t ${{ secrets.DOCKER_USERNAME }}/prepare_data_service:latest -f src/prepare_data/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/prepare_data_service:${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/prepare_data_service:latest

      - name: Build and push train_model image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/train_model_service:${{ github.run_number }} -t ${{ secrets.DOCKER_USERNAME }}/train_model_service:latest -f src/train_model/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/train_model_service:${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/train_model_service:latest

      - name: Build and push postgres image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/postgres_service:${{ github.run_number }} -t ${{ secrets.DOCKER_USERNAME }}/postgres_service:latest -f src/postgresql/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/postgres_service:${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/postgres_service:latest

      - name: Build and push data_import image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/data_import_service:${{ github.run_number }} -t ${{ secrets.DOCKER_USERNAME }}/data_import_service:latest -f src/data_import/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/data_import_service:${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/data_import_service:latest
