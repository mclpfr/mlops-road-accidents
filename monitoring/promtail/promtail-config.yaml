server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: debug

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    batchwait: 1s
    batchsize: 102400
    timeout: 10s
    backoff_config:
      min_period: 100ms
      max_period: 10s
      max_retries: 3

scrape_configs:
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'project'
      - source_labels: ['__meta_docker_container_label_logging_job']
        target_label: 'job'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        regex: '.+'
        action: keep
      - source_labels: ['__meta_docker_container_id']
        target_label: 'container_id'
      - source_labels: ['__meta_docker_container_image']
        target_label: 'image'
    pipeline_stages:
      - docker: {}
      # Détecte les niveaux de logs (error, warn, info, debug) dans la ligne, insensible à la casse
      - regex:
          # Capture:
          #   • JSON/kv style: level=error or level=ERROR
          #   • Plain text with separated word:  ... ERROR ...
          expression: "(?i)(?:level[=: ]+)(?P<level>error|warn|warning|info|debug)|\\b(?P<level2>ERROR|WARN|INFO|DEBUG)\\b"
          # Drop optional "warning" to "warn" for consistency
      - replace:
          expression: '(?i)warning'
          replace: 'warn'
      # Convertit en minuscules pour homogénéiser
      - replace:
          expression: '(?i)(error|warn|info|debug)'
          replace: '$1'
      - labels:
          level:
      - labels:
          level:
